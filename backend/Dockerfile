# Инструкция, которая определяет базовый образ
FROM node:18-alpine AS builder
# Рабочая папка проекта. Все дальнейшие инструкции будут выполняться относительно нее.
# Например, копировать что-то в ./ - значит копировать в эту папку.
# Это "что-то" должно находиться в контексте моего Dockerfile.
WORKDIR /app
# Инструкция ниже создает слой в образе, кот-й будет содержать файловую систему моего проекта.
COPY package*.json ./ 
# Ниже происходит запуск какой-то программы внутри контейнера. Например, установить зависимости или пакеты.
# То есть в результате RUN формируется файловая структура образа. 
RUN npm ci --no-audit --no-fund
# Следующий слой - копирование всех остальных файлов. Например:
COPY . ./
# Команда: что надо будет сделать, чтобы вся эта файловая структура заиграла
RUN npm run build


# Следующий stage:
FROM node:18-alpine AS runner

WORKDIR /app

COPY package*.json ./ 

RUN npm ci --omit=dev --no-audit --no-fund \
  && npm i -g pm2

COPY --from=builder /app/dist ./dist

COPY ./ecosystem.config.js ./

ENTRYPOINT [ "pm2-runtime", "start", "ecosystem.config.js" ]

## Когда я описала образ, для его создания надо в терминале, находясь в папке backend,
## запустить команду 'docker build . -t image-name'

### Дальше можно попробовать запустить контейнер (находясь в той же папке в терминале):
### docker run image-name